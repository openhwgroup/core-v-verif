###############################################################################
#
# Copyright 2020 OpenHW Group
#
# Licensed under the Solderpad Hardware Licence, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://solderpad.org/licenses/
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0 WITH SHL-2.0
#
###############################################################################
# This is a basic workflow to get core-v-verif started with GitHub Actions.
# It initiates a regression on the Metrics platform and waits for the result
# of the regression. If all tests pass, the action succeeds.
# In the near future this will be expanded to support multiple development
# branches, each with its own pull and/or pull-request regression.
#
# Stolen, without the slightest hint of shame, from Aimee Sutton.

name: cv32e40p-scheduled-metrics-regress

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch

on: workflow_dispatch
  # To alleviate licenses usage on the Metrics cloud, turning off schedule 
  # and using workflow_dispatch (i.e. manual start only)
  # schedule:
  #   # This will run nightly (in the Western Hemisphere) at 0500 UTC
  #   - cron: '0 5 * * *'

jobs:
  cv32e40p_full_covg_no_pulp_dev-metrics:
    name: cv32e40p_full_covg_no_pulp_dev-metrics
    runs-on: ubuntu-latest
    if: github.repository == 'openhwgroup/core-v-verif'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: cv32e40p/dev
      - run: ./bin/metrics-regress $METRICS_REGRESSION_NAME $METRICS_PROJECT_ID
        env:
          METRICS_CI_TOKEN: ${{ secrets.METRICS_CI_TOKEN }}
          METRICS_REGRESSION_NAME: cv32e40p_full_covg_no_pulp_dev
          METRICS_PROJECT_ID: ${{ secrets.METRICS_PROJECT_ID }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        shell: bash

  cv32e40p_compliance_dev-metrics:
    name: cv32e40p_compliance_dev-metrics
    runs-on: ubuntu-latest
    if: github.repository == 'openhwgroup/core-v-verif'
    steps:
      - uses: actions/checkout@v2
        with:
          ref: cv32e40p/dev
      - run: ./bin/metrics-regress $METRICS_REGRESSION_NAME $METRICS_PROJECT_ID
        env:
          METRICS_CI_TOKEN: ${{ secrets.METRICS_CI_TOKEN }}
          METRICS_REGRESSION_NAME: cv32e40p_compliance_dev
          METRICS_PROJECT_ID: ${{ secrets.METRICS_PROJECT_ID }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
        shell: bash
