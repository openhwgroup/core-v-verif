<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<refinement-file-root>
  <information comment-version="1" creation-time="Fri 15 Sep 2023 14:38:56 CEST" creator="ropeders" csCheck="true" modified-by="ropeders" modify-time="Mon 18 Sep 2023 09:23:39 CEST" save-ref-method="seq" tool-version="Cadence vManager22.05" rules-signature-c="d443b7e6fee3ce919b866011d1f9cff">
    <ucm-files>
      <ucm-file domain="icc" modelCheckSum="1311596009" path="icc_4e2d5de9_04ce7787.ucm(merged)"></ucm-file>
    </ucm-files>
    <ccf-files>
      <ccf-file content="# ----------------------------------------------------------------------------------;# General coverage configuration options;# ----------------------------------------------------------------------------------;;# Setting Constant Object Marking and enabling log for it;set_com -log;;# Disable scoring of implicit else and default case blocks;set_implicit_block_scoring -off;;# Remove empty instances from coverage hierarchy;deselect_coverage -remove_empty_instances;;# Enable resilience from code changes;set_refinement_resilience;;# Improve expression coverage performance;set_optimize -vlog_prune_on;;# Set glitch strobes;set_glitch_strobe 1ps;;# Enable coverage for type parameterized modules;set_parameterized_module_coverage -type_parameters_only;;# Enable coverage for expressions containing inside operator;set_expr_scoring -inside;;# ----------------------------------------------------------------------------------;# FSM coverage configruation;# ----------------------------------------------------------------------------------;;# Enable scoring state hold arcs in FSM;set_fsm_scoring -hold_transition;;# ----------------------------------------------------------------------------------;# Expression coverage configuration;# ----------------------------------------------------------------------------------;;# Setting expression scoring for all operators (not only boolean (|| &amp;&amp;) and VHDL (AND OR NOR NAND);set_expr_coverable_operators -all;set_expr_coverable_statements -all;;# ----------------------------------------------------------------------------------;# Toggle coverage configuration;# ----------------------------------------------------------------------------------;;# Toggle coverage smart refinement (refinement for toggle with traverse hierarchy);set_toggle_smart_refinement;;# ----------------------------------------------------------------------------------;# Covergroup coverage configuration;# ----------------------------------------------------------------------------------;set_covergroup -new_instance_reporting;;# ----------------------------------------------------------------------------------;# Instances/modules to remove from coverage;# For performance and to avoid spurious warnings, remove these modules from code coverage collection;# ----------------------------------------------------------------------------------;deselect_coverage -all -instance uvmt_cv32e40s_tb.imperas_dv...;" path="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/cv32e40s/sim/tools/xrun/covfile.tcl"></ccf-file>
    </ccf-files>
  </information>
  <rules>
    <rule block-kind="0" block-kind-idx="2" cb-checksum="48005256" ccType="type" ccfFlagsMask="4398046513408-42" comment="0" domain="icc" entityName="&quot;cv32e40s_pmp.addr_match&quot;/3" entityType="block" excTime="1694783083" file="1" im-checksum="2033800372" line="118" name="exclude" packageName="worklib" reviewer="unknown" text="PMP_MODE_NA4   : region_match_all[r_a] = region_match_eq[r_a];" user="2" vscope="default"></rule>
    <rule block-kind="0" block-kind-idx="3" cb-checksum="48005256" ccType="type" ccfFlagsMask="4398046513408-42" comment="0" domain="icc" entityName="&quot;cv32e40s_pmp.addr_match&quot;/4" entityType="block" excTime="1694783109" file="1" im-checksum="2033800372" line="119" name="exclude" packageName="worklib" reviewer="unknown" text="PMP_MODE_NAPOT : region_match_all[r_a] = region_match_eq[r_a];" user="2" vscope="default"></rule>
    <rule block-kind="0" block-kind-idx="1" cb-checksum="268795329" ccType="type" ccfFlagsMask="4398046513408-42" comment="0" domain="icc" entityName="&quot;cv32e40s_cs_registers.csr_pmp_T.gen_pmp_csr.pmp_region_T&quot;/2" entityType="block" excTime="1694781485" file="3" im-checksum="2107852102" line="2309" name="exclude" packageName="worklib" reviewer="unknown" text="if(pmpncfg_locked[i] || pmpncfg_warl_ignore_wr[i]) begin" user="2" vscope="default"></rule>
    <rule block-kind="3" block-kind-idx="0" cb-checksum="465763325" ccType="type" ccfFlagsMask="4398046513408-42" comment="4" domain="icc" entityName="cv32e40s_load_store_unit/8" entityType="block" excTime="1695021672" file="5" im-checksum="1842644712" line="220" name="exclude" packageName="worklib" reviewer="unknown" text="default:;" user="2" vscope="default"></rule>
    <rule block-kind="3" block-kind-idx="1" cb-checksum="465763325" ccType="type" ccfFlagsMask="4398046513408-42" comment="4" domain="icc" entityName="cv32e40s_load_store_unit/16" entityType="block" excTime="1695021686" file="5" im-checksum="1842644712" line="232" name="exclude" packageName="worklib" reviewer="unknown" text="default:;" user="2" vscope="default"></rule>
    <rule block-kind="3" block-kind-idx="8" cb-checksum="465763325" ccType="type" ccfFlagsMask="4398046513408-42" comment="4" domain="icc" entityName="cv32e40s_load_store_unit/25" entityType="block" excTime="1695021708" file="5" im-checksum="1842644712" line="249" name="exclude" packageName="worklib" reviewer="unknown" text="default:;" user="2" vscope="default"></rule>
    <rule block-kind="3" block-kind-idx="11" cb-checksum="465763325" ccType="type" ccfFlagsMask="4398046513408-42" comment="6" domain="icc" entityName="cv32e40s_load_store_unit/28" entityType="block" excTime="1695021796" file="5" im-checksum="1842644712" line="255" name="exclude" packageName="worklib" reviewer="unknown" text="2'b00: be = 4'b0000; // this is not used, but included for completeness" user="2" vscope="default"></rule>
  </rules>
  <cache-map>
    <cache-entry key="0" value="PMP, checked in formal."></cache-entry>
    <cache-entry key="1" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_pmp.sv"></cache-entry>
    <cache-entry key="2" value="ropeders"></cache-entry>
    <cache-entry key="3" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_cs_registers.sv"></cache-entry>
    <cache-entry key="4" value="TODO Useless default case, but why didn't UNR/auto filter it away?"></cache-entry>
    <cache-entry key="5" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_load_store_unit.sv"></cache-entry>
    <cache-entry key="6" value="&quot;this is not used, but included for completeness&quot;"></cache-entry>
  </cache-map>
</refinement-file-root>