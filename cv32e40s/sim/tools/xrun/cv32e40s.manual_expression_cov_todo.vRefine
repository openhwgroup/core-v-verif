<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<refinement-file-root>
  <information comment-version="1" creation-time="Mon 28 Aug 2023 14:01:07 CEST" creator="ropeders" csCheck="true" modified-by="ropeders" modify-time="Thu 14 Sep 2023 11:18:03 CEST" save-ref-method="seq" tool-version="Cadence vManager21.03" rules-signature-c="525055c6abb951d9ac0d5449c1ff84">
    <ucm-files>
      <ucm-file domain="icc" modelCheckSum="1311596009" path="icc_4e2d5de9_04ce7787.ucm(merged)"></ucm-file>
    </ucm-files>
    <ccf-files>
      <ccf-file content="# ----------------------------------------------------------------------------------;# General coverage configuration options;# ----------------------------------------------------------------------------------;;# Setting Constant Object Marking and enabling log for it;set_com -log;;# Disable scoring of implicit else and default case blocks;set_implicit_block_scoring -off;;# Remove empty instances from coverage hierarchy;deselect_coverage -remove_empty_instances;;# Enable resilience from code changes;set_refinement_resilience;;# Improve expression coverage performance;set_optimize -vlog_prune_on;;# Set glitch strobes;set_glitch_strobe 1ps;;# Enable coverage for type parameterized modules;set_parameterized_module_coverage -type_parameters_only;;# Enable coverage for expressions containing inside operator;set_expr_scoring -inside;;# ----------------------------------------------------------------------------------;# FSM coverage configruation;# ----------------------------------------------------------------------------------;;# Enable scoring state hold arcs in FSM;set_fsm_scoring -hold_transition;;# ----------------------------------------------------------------------------------;# Expression coverage configuration;# ----------------------------------------------------------------------------------;;# Setting expression scoring for all operators (not only boolean (|| &amp;&amp;) and VHDL (AND OR NOR NAND);set_expr_coverable_operators -all;set_expr_coverable_statements -all;;# ----------------------------------------------------------------------------------;# Toggle coverage configuration;# ----------------------------------------------------------------------------------;;# Toggle coverage smart refinement (refinement for toggle with traverse hierarchy);set_toggle_smart_refinement;;# ----------------------------------------------------------------------------------;# Covergroup coverage configuration;# ----------------------------------------------------------------------------------;set_covergroup -new_instance_reporting;;# ----------------------------------------------------------------------------------;# Instances/modules to remove from coverage;# For performance and to avoid spurious warnings, remove these modules from code coverage collection;# ----------------------------------------------------------------------------------;deselect_coverage -all -instance uvmt_cv32e40s_tb.imperas_dv...;" path="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/cv32e40s/sim/tools/xrun/covfile.tcl"></ccf-file>
    </ccf-files>
  </information>
  <rules>
    <rule cb-checksum="1195948442" ccType="type" ccfFlagsMask="4398046513408-42" comment="0" dcExpr="lsu_valid_q ? lsu_wpt_match_q : lsu_wpt_match_i" dcExprIndex="0" domain="icc" entityName="cv32e40s_wb_stage/4/1/4" entityType="min-term" excTime="1693229615" file="1" im-checksum="1732560909" line="196" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="lsu_valid_q ? lsu_wpt_match_q : lsu_wpt_match_i" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="480926733" ccType="type" ccfFlagsMask="4398046513408-42" comment="0" dcExpr="lsu_valid_q ? lsu_mpu_status_q : lsu_mpu_status_i" dcExprIndex="0" domain="icc" entityName="cv32e40s_wb_stage/5/1/2" entityType="min-term" excTime="1693229642" file="1" im-checksum="1732560909" line="197" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="lsu_valid_q ? lsu_mpu_status_q : lsu_mpu_status_i" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="1928791581" ccType="type" ccfFlagsMask="4398046513408-42" comment="3" dcExpr="(state == WBUF_FULL) ? trans_q : trans_i" dcExprIndex="0" domain="icc" entityName="cv32e40s_write_buffer/7/1/3" entityType="min-term" excTime="1693229268" file="4" im-checksum="278253321" line="116" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="(state == WBUF_FULL) ? trans_q : trans_i" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="1928791581" ccType="type" ccfFlagsMask="4398046513408-42" comment="3" dcExpr="(state == WBUF_FULL) ? trans_q : trans_i" dcExprIndex="0" domain="icc" entityName="cv32e40s_write_buffer/7/1/4" entityType="min-term" excTime="1693229268" file="4" im-checksum="278253321" line="116" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="(state == WBUF_FULL) ? trans_q : trans_i" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="145750951" ccType="type" ccfFlagsMask="4398046513408-42" comment="5" dcExpr="(opcode == OPCODE_BRANCH) ? {imm[12],imm[10:5]} : funct7" dcExprIndex="0" domain="icc" entityName="cv32e40s_dummy_instr/4/1/2" entityType="min-term" excTime="1693228673" file="6" im-checksum="1140823100" line="164" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="(opcode == OPCODE_BRANCH) ? {imm[12],imm[10:5]} : funct7" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="1932976296" ccType="type" ccfFlagsMask="4398046513408-42" comment="5" dcExpr="(opcode == OPCODE_BRANCH) ? {imm[4:1],imm[11]} : rd" dcExprIndex="0" domain="icc" entityName="cv32e40s_dummy_instr/5/1/1" entityType="min-term" excTime="1693228687" file="6" im-checksum="1140823100" line="168" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="(opcode == OPCODE_BRANCH) ? {imm[4:1],imm[11]} : rd" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="597118981" ccType="type" ccfFlagsMask="4398046513408-42" comment="7" dcExpr="| mie" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_core.gen_clic_interrupt_T&quot;/1/1/1" entityType="min-term" excTime="1693227215" file="8" im-checksum="1132388820" line="1162" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="| mie" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="448998998" ccType="type" ccfFlagsMask="4398046513408-42" comment="9" dcExpr="(in_i[(k * 2)] == 1'b1) ? index_lut[(k * 2)] : index_lut[((k * 2) + 1)]" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_ff_one.gen_tree.gen_root_level_T.gen_node_root.gen_two_T&quot;/2/1/3" entityType="min-term" excTime="1693226028" file="10" im-checksum="1410077847" line="73" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="(in_i[(k * 2)] == 1'b1) ? index_lut[(k * 2)] : index_lut[((k * 2) + 1)]" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="1137109395" ccType="type" ccfFlagsMask="4398046513408-42" comment="9" dcExpr="(sel_nodes[(((2**(level + 1)) - 1) + (l * 2))] == 1'b1) ? index_nodes[(((2**(level + 1)) - 1) + (l * 2))] : index_nodes[((((2**(level + 1)) - 1) + (l * 2)) + 1)]" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_ff_one.gen_tree.gen_non_root_level_T.gen_node_non_root&quot;/2/1/3" entityType="min-term" excTime="1693225908" file="10" im-checksum="1410077847" line="63" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="(sel_nodes[(((2**(level + 1)) - 1) + (l * 2))] == 1'b1) ? index_nodes[(((2**(level + 1)) - 1) + (l * 2))] : index_nodes[((((2**(level + 1)) - 1) + (l * 2)) + 1)]" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="1763603095" ccType="type" ccfFlagsMask="4398046513408-42" comment="11" dcExpr="data_ind_timing_i &amp;&amp; (| cnt_d_dummy)" dcExprIndex="0" domain="icc" entityName="cv32e40s_div/15/1/1" entityType="min-term" excTime="1693225478" file="12" im-checksum="422876272" line="245" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="data_ind_timing_i &amp;&amp; (| cnt_d_dummy)" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="238500707" ccType="type" ccfFlagsMask="4398046513408-42" comment="13" dcExpr="dummy_insert ? dummy_instr : (seq_valid ? seq_instr : instr_decompressed)" dcExprIndex="0" domain="icc" entityName="cv32e40s_if_stage/15/1/3" entityType="min-term" excTime="1693224032" file="14" im-checksum="32998194" line="544" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="dummy_insert ? dummy_instr : (seq_valid ? seq_instr : instr_decompressed)" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="238500707" ccType="type" ccfFlagsMask="4398046513408-42" comment="13" dcExpr="dummy_insert ? dummy_instr : (seq_valid ? seq_instr : instr_decompressed)" dcExprIndex="0" domain="icc" entityName="cv32e40s_if_stage/15/1/4" entityType="min-term" excTime="1693224032" file="14" im-checksum="32998194" line="544" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="dummy_insert ? dummy_instr : (seq_valid ? seq_instr : instr_decompressed)" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="238500707" ccType="type" ccfFlagsMask="4398046513408-42" comment="13" dcExpr="dummy_insert ? dummy_instr : (seq_valid ? seq_instr : instr_decompressed)" dcExprIndex="0" domain="icc" entityName="cv32e40s_if_stage/15/1/5" entityType="min-term" excTime="1693224032" file="14" im-checksum="32998194" line="544" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="dummy_insert ? dummy_instr : (seq_valid ? seq_instr : instr_decompressed)" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="238500707" ccType="type" ccfFlagsMask="4398046513408-42" comment="13" dcExpr="dummy_insert ? dummy_instr : (seq_valid ? seq_instr : instr_decompressed)" dcExprIndex="0" domain="icc" entityName="cv32e40s_if_stage/15/1/6" entityType="min-term" excTime="1693224032" file="14" im-checksum="32998194" line="544" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="dummy_insert ? dummy_instr : (seq_valid ? seq_instr : instr_decompressed)" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="2103009422" ccType="type" ccfFlagsMask="4398046513408-42" comment="0" dcExpr="(dummy_instr_id_i || hint_instr_id_i) ? mem[0] : RF_REG_RV" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_register_file.genblk1_T&quot;/1/1/5" entityType="min-term" excTime="1693230836" file="15" im-checksum="1144468874" line="73" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="(dummy_instr_id_i || hint_instr_id_i) ? mem[0] : RF_REG_RV" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="2103009422" ccType="type" ccfFlagsMask="4398046513408-42" comment="0" dcExpr="(dummy_instr_id_i || hint_instr_id_i) ? mem[0] : RF_REG_RV" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_register_file.genblk1_T&quot;/1/1/6" entityType="min-term" excTime="1693230836" file="15" im-checksum="1144468874" line="73" name="exclude" packageName="worklib" reviewer="unknown; unknown" text="(dummy_instr_id_i || hint_instr_id_i) ? mem[0] : RF_REG_RV" ung="0" user="2" vscope="default"></rule>
    <rule cb-checksum="7050267" ccType="type" ccfFlagsMask="4398046513408-42" comment="16" dcExpr="resp_valid_i &amp;&amp; (! (| outstanding_cnt_q))" dcExprIndex="0" domain="icc" entityName="cv32e40s_alignment_buffer/30/1/1" entityType="min-term" excTime="1694178480" file="17" im-checksum="638231437" line="714" name="exclude" packageName="worklib" reviewer="unknown" text="resp_valid_i &amp;&amp; (! (| outstanding_cnt_q))" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="2141281553" ccType="type" ccfFlagsMask="4398046513408-42" comment="19" dcExpr="(enable_i[0] &amp;&amp; resp_i.integrity) ? (rchk_res[3:0] != resp_i.rchk[3:0]) : 1'b0" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_rchk_check#(struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/2/1/1" entityType="min-term" excTime="1694180628" file="20" im-checksum="1584057256" line="61" name="exclude" packageName="worklib" reviewer="unknown" text="(enable_i[0] &amp;&amp; resp_i.integrity) ? (rchk_res[3:0] != resp_i.rchk[3:0]) : 1'b0" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="1694705197" ccType="type" ccfFlagsMask="4398046513408-42" comment="19" dcExpr="(enable_i[1] &amp;&amp; resp_i.integrity) ? (rchk_res[4] != resp_i.rchk[4]) : 1'b0" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_rchk_check#(struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/3/1/1" entityType="min-term" excTime="1694180617" file="20" im-checksum="1584057256" line="62" name="exclude" packageName="worklib" reviewer="unknown" text="(enable_i[1] &amp;&amp; resp_i.integrity) ? (rchk_res[4] != resp_i.rchk[4]) : 1'b0" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="348369754" ccType="type" ccfFlagsMask="4398046513408-42" comment="21" dcExpr="rdata_err || err_err" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_rchk_check#(struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/4/1/1" entityType="min-term" excTime="1694180396" file="20" im-checksum="1584057256" line="63" name="exclude" packageName="worklib" reviewer="unknown" text="rdata_err || err_err" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="348369754" ccType="type" ccfFlagsMask="4398046513408-42" comment="21" dcExpr="rdata_err || err_err" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_rchk_check#(struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/4/1/2" entityType="min-term" excTime="1694180412" file="20" im-checksum="1584057256" line="63" name="exclude" packageName="worklib" reviewer="unknown" text="rdata_err || err_err" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="2141281553" ccType="type" ccfFlagsMask="4398046513408-42" comment="22" dcExpr="(enable_i[0] &amp;&amp; resp_i.integrity) ? (rchk_res[3:0] != resp_i.rchk[3:0]) : 1'b0" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_rchk_check#(struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/2/2/2" entityType="min-term" excTime="1694180679" file="20" im-checksum="1584057256" line="61" name="exclude" packageName="worklib" reviewer="unknown" text="(rchk_res[3:0] != resp_i.rchk[3:0])" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="1694705197" ccType="type" ccfFlagsMask="4398046513408-42" comment="22" dcExpr="(enable_i[1] &amp;&amp; resp_i.integrity) ? (rchk_res[4] != resp_i.rchk[4]) : 1'b0" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_rchk_check#(struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/3/2/2" entityType="min-term" excTime="1694180699" file="20" im-checksum="1584057256" line="62" name="exclude" packageName="worklib" reviewer="unknown" text="(rchk_res[4] != resp_i.rchk[4])" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="299126402" ccType="type" ccfFlagsMask="4398046513408-42" comment="23" dcExpr="gntpar_err_i || gntpar_err_q" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_obi_integrity_fifo#(struct packed{ logic [31:0] rdata; logic [1:0] err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/5/1/1" entityType="min-term" excTime="1694181556" file="24" im-checksum="2095779907" line="143" name="exclude" packageName="worklib" reviewer="unknown" text="gntpar_err_i || gntpar_err_q" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="299126402" ccType="type" ccfFlagsMask="4398046513408-42" comment="23" dcExpr="gntpar_err_i || gntpar_err_q" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_obi_integrity_fifo#(struct packed{ logic [31:0] rdata; logic [1:0] err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/5/1/2" entityType="min-term" excTime="1694181530" file="24" im-checksum="2095779907" line="143" name="exclude" packageName="worklib" reviewer="unknown" text="gntpar_err_i || gntpar_err_q" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="1404075474" ccType="type" ccfFlagsMask="4398046513408-42" comment="23" dcExpr="gntpar_err_i || gntpar_err_q" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_obi_integrity_fifo#(struct packed{ logic [31:0] rdata; logic [1:0] err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/6/1/1" entityType="min-term" excTime="1694181625" file="24" im-checksum="2095779907" line="154" name="exclude" packageName="worklib" reviewer="unknown" text="gntpar_err_i || gntpar_err_q" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="1404075474" ccType="type" ccfFlagsMask="4398046513408-42" comment="23" dcExpr="gntpar_err_i || gntpar_err_q" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_obi_integrity_fifo#(struct packed{ logic [31:0] rdata; logic [1:0] err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/6/1/2" entityType="min-term" excTime="1694181632" file="24" im-checksum="2095779907" line="154" name="exclude" packageName="worklib" reviewer="unknown" text="gntpar_err_i || gntpar_err_q" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="1259523319" ccType="type" ccfFlagsMask="4398046513408-42" comment="25" dcExpr="obi_rvalid_i &amp;&amp; (! (| cnt_q))" dcExprIndex="0" domain="icc" entityName="&quot;cv32e40s_obi_integrity_fifo#(struct packed{ logic [31:0] rdata; logic [1:0] err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/9/1/1" entityType="min-term" excTime="1694181887" file="24" im-checksum="2095779907" line="190" name="exclude" packageName="worklib" reviewer="unknown" text="obi_rvalid_i &amp;&amp; (! (| cnt_q))" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="1640555341" ccType="type" ccfFlagsMask="4398046513408-42" comment="26" dcExpr="(seed_we_i || lockup_o) || shift_i" dcExprIndex="0" domain="icc" entityName="cv32e40s_lfsr/1/1/1" entityType="min-term" excTime="1694182200" file="27" im-checksum="2045584009" line="54" name="exclude" packageName="worklib" reviewer="unknown" text="(seed_we_i || lockup_o) || shift_i" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="1640555341" ccType="type" ccfFlagsMask="4398046513408-42" comment="26" dcExpr="(seed_we_i || lockup_o) || shift_i" dcExprIndex="0" domain="icc" entityName="cv32e40s_lfsr/1/1/2" entityType="min-term" excTime="1694182208" file="27" im-checksum="2045584009" line="54" name="exclude" packageName="worklib" reviewer="unknown" text="(seed_we_i || lockup_o) || shift_i" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="555061744" ccType="type" ccfFlagsMask="4398046513408-42" comment="26" dcExpr="((! (| lfsr_n)) &amp;&amp; shift_i) &amp;&amp; (! seed_we_i)" dcExprIndex="0" domain="icc" entityName="cv32e40s_lfsr/3/1/1" entityType="min-term" excTime="1694182363" file="27" im-checksum="2045584009" line="77" name="exclude" packageName="worklib" reviewer="unknown" text="((! (| lfsr_n)) &amp;&amp; shift_i) &amp;&amp; (! seed_we_i)" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="555061744" ccType="type" ccfFlagsMask="4398046513408-42" comment="26" dcExpr="((! (| lfsr_n)) &amp;&amp; shift_i) &amp;&amp; (! seed_we_i)" dcExprIndex="0" domain="icc" entityName="cv32e40s_lfsr/3/1/2" entityType="min-term" excTime="1694182372" file="27" im-checksum="2045584009" line="77" name="exclude" packageName="worklib" reviewer="unknown" text="((! (| lfsr_n)) &amp;&amp; shift_i) &amp;&amp; (! seed_we_i)" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="1926480554" ccType="type" ccfFlagsMask="4398046513408-42" comment="28" dcExpr="(! (| seed_i)) &amp;&amp; seed_we_i" dcExprIndex="0" domain="icc" entityName="cv32e40s_lfsr/4/1/1" entityType="min-term" excTime="1694182459" file="27" im-checksum="2045584009" line="80" name="exclude" packageName="worklib" reviewer="unknown" text="(! (| seed_i)) &amp;&amp; seed_we_i" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="528441352" ccType="type" ccfFlagsMask="4398046513408-42" comment="29" dcExpr="lockup_shift || lockup_wr" dcExprIndex="0" domain="icc" entityName="cv32e40s_lfsr/5/1/1" entityType="min-term" excTime="1694182572" file="27" im-checksum="2045584009" line="82" name="exclude" packageName="worklib" reviewer="unknown" text="lockup_shift || lockup_wr" ung="0" user="18" vscope="default"></rule>
    <rule cb-checksum="528441352" ccType="type" ccfFlagsMask="4398046513408-42" comment="29" dcExpr="lockup_shift || lockup_wr" dcExprIndex="0" domain="icc" entityName="cv32e40s_lfsr/5/1/2" entityType="min-term" excTime="1694182588" file="27" im-checksum="2045584009" line="82" name="exclude" packageName="worklib" reviewer="unknown" text="lockup_shift || lockup_wr" ung="0" user="18" vscope="default"></rule>
  </rules>
  <cache-map>
    <cache-entry key="0" value="TODO Why not covered?; TODO Why not covered?"></cache-entry>
    <cache-entry key="1" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_wb_stage.sv"></cache-entry>
    <cache-entry key="2" value="ropeders; ropeders"></cache-entry>
    <cache-entry key="3" value="TODO Write buffer, why not covered?; TODO Write buffer, why not covered?"></cache-entry>
    <cache-entry key="4" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_write_buffer.sv"></cache-entry>
    <cache-entry key="5" value="TODO Dummy branch, why not stimulated?; TODO Dummy branch, why not stimulated?"></cache-entry>
    <cache-entry key="6" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_dummy_instr.sv"></cache-entry>
    <cache-entry key="7" value="TODO Unused clic signals mie?; TODO Unused clic signals mie?"></cache-entry>
    <cache-entry key="8" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_core.sv"></cache-entry>
    <cache-entry key="9" value="TODO This is practically unreadable.; TODO This is practically unreadable."></cache-entry>
    <cache-entry key="10" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_ff_one.sv"></cache-entry>
    <cache-entry key="11" value="TODO Data-independent timing, why not stimulated?; TODO Data-independent timing, why not stimulated?"></cache-entry>
    <cache-entry key="12" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_div.sv"></cache-entry>
    <cache-entry key="13" value="TODO dummy instrs, why not covered?; TODO dummy instrs, why not covered?"></cache-entry>
    <cache-entry key="14" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_if_stage.sv"></cache-entry>
    <cache-entry key="15" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_register_file.sv"></cache-entry>
    <cache-entry key="16" value="Glitch controll signal. There is no test using glitches."></cache-entry>
    <cache-entry key="17" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_alignment_buffer.sv"></cache-entry>
    <cache-entry key="18" value="krdosvik"></cache-entry>
    <cache-entry key="19" value="Glitch control signal. There is no test using glitches. The problem here is that rchk_res allways equals resp_i.rchk, because the obi rchk signal is always set correctly according to the other obi input signals."></cache-entry>
    <cache-entry key="20" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_rchk_check.sv"></cache-entry>
    <cache-entry key="21" value="Glitch control signal. There is no test using glitches. This signal is set if one of the other glitch signals are set, which they are not in un-glitching tests"></cache-entry>
    <cache-entry key="22" value="Glitch control signal. There is no test using glitches. The problem here is that rchk_res allways equals resp_i.rchk, because the obi rchk signal is always set correctly according to the other obi input signals. "></cache-entry>
    <cache-entry key="23" value="Glitch control signal. There is no test using glitches. The OBI signal gntpar is assumed to equal ~gnt. Since we have not inserted glitches, we will not experience that gntpar = gnt, hence gntpar_err_i is always 0 (therefore also gntpar_err_q) in the generated test cases. "></cache-entry>
    <cache-entry key="24" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_obi_integrity_fifo.sv"></cache-entry>
    <cache-entry key="25" value="Glitch control signal. There is no test using glitches. Normal obi behavior is that rvalid is not set unless there is an outstanding request. This is checked several places before reaching the bus, including here.  "></cache-entry>
    <cache-entry key="26" value="It is likely that no simulation test writes to the LRFS register but lets it be untouched. It is also likely that few tests insert so many dummy instructions that the LFSR ends up in a lockup situation LFSR=’0 (maybe that is not even possible with the default initial LFSR value)."></cache-entry>
    <cache-entry key="27" value="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full/clones/316/core-v-verif/core-v-cores/cv32e40s/rtl/cv32e40s_lfsr.sv"></cache-entry>
    <cache-entry key="28" value="It is likely that no simulation test writes to the LRFS register but lets it be untouched."></cache-entry>
    <cache-entry key="29" value="lockup due to shifting or writing 0 to the LFSR register is not tested in any test."></cache-entry>
  </cache-map>
</refinement-file-root>