<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<refinement-file-root>
  <information comment-version="1" creation-time="Sun 01 Oct 2023 14:22:07 CEST" creator="krdosvik" csCheck="false" save-ref-method="seq" tool-version="Cadence vManager22.05" rules-signature-c="1a9986483eeb8bda55fcce9d8385f417">
    <ucm-files>
      <ucm-file domain="icc" modelCheckSum="664933906" path="icc_27a21612_132ffdc1.ucm(merged)"></ucm-file>
    </ucm-files>
    <ccf-files>
      <ccf-file content="# ----------------------------------------------------------------------------------;# General coverage configuration options;# ----------------------------------------------------------------------------------;;# Setting Constant Object Marking and enabling log for it;set_com -log;;# Disable scoring of implicit else and default case blocks;set_implicit_block_scoring -off;;# Remove empty instances from coverage hierarchy;deselect_coverage -remove_empty_instances;;# Enable resilience from code changes;set_refinement_resilience;;# Improve expression coverage performance;set_optimize -vlog_prune_on;;# Set glitch strobes;set_glitch_strobe 1ps;;# Enable coverage for type parameterized modules;set_parameterized_module_coverage -type_parameters_only;;# Enable coverage for expressions containing inside operator;set_expr_scoring -inside;;# ----------------------------------------------------------------------------------;# FSM coverage configruation;# ----------------------------------------------------------------------------------;;# Enable scoring state hold arcs in FSM;set_fsm_scoring -hold_transition;;# ----------------------------------------------------------------------------------;# Expression coverage configuration;# ----------------------------------------------------------------------------------;;# Setting expression scoring for all operators (not only boolean (|| &amp;&amp;) and VHDL (AND OR NOR NAND);set_expr_coverable_operators -all;set_expr_coverable_statements -all;;# ----------------------------------------------------------------------------------;# Toggle coverage configuration;# ----------------------------------------------------------------------------------;;# Toggle coverage smart refinement (refinement for toggle with traverse hierarchy);set_toggle_smart_refinement;;# ----------------------------------------------------------------------------------;# Covergroup coverage configuration;# ----------------------------------------------------------------------------------;set_covergroup -new_instance_reporting;;# ----------------------------------------------------------------------------------;# Instances/modules to remove from coverage;# For performance and to avoid spurious warnings, remove these modules from code coverage collection;# ----------------------------------------------------------------------------------;deselect_coverage -all -instance uvmt_cv32e40s_tb.imperas_dv...;" path="/work/mcu40nm/ip_rad_riscv/mdx_cv32e40s_xrun_regress_full_no_ISS/clones/57/core-v-verif/cv32e40s/sim/tools/xrun/covfile.tcl"></ccf-file>
    </ccf-files>
  </information>
  <rules>
    <rule ccType="type" comment="0" domain="icc" entityName="&quot;cv32e40s_mpu#(struct packed{ logic [31:0] addr; logic [1:0] memtype; logic [2:0] prot; logic dbg; logic [12:0] achk; logic integrity;  } , struct packed{ obi_inst_resp_t bus_resp; mpu_status_e mpu_status;  } , struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/state_q/MPU_WR_ERR_WAIT" entityType="state" excTime="1696161758" name="exclude" packageName="worklib" reviewer="unknown" user="1" vscope="default"></rule>
    <rule ccType="type" comment="0" domain="icc" entityName="&quot;cv32e40s_mpu#(struct packed{ logic [31:0] addr; logic [1:0] memtype; logic [2:0] prot; logic dbg; logic [12:0] achk; logic integrity;  } , struct packed{ obi_inst_resp_t bus_resp; mpu_status_e mpu_status;  } , struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/state_q/MPU_WR_ERR_RESP" entityType="state" excTime="1696161768" name="exclude" packageName="worklib" reviewer="unknown" user="1" vscope="default"></rule>
    <rule ccType="type" comment="0" domain="icc" entityName="&quot;cv32e40s_mpu#(struct packed{ logic [31:0] addr; logic [1:0] memtype; logic [2:0] prot; logic dbg; logic [12:0] achk; logic integrity;  } , struct packed{ obi_inst_resp_t bus_resp; mpu_status_e mpu_status;  } , struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/state_q/MPU_IDLE/MPU_WR_ERR_RESP" entityType="transition" excTime="1696161858" name="exclude" packageName="worklib" reviewer="unknown" user="1" vscope="default"></rule>
    <rule ccType="type" comment="0" domain="icc" entityName="&quot;cv32e40s_mpu#(struct packed{ logic [31:0] addr; logic [1:0] memtype; logic [2:0] prot; logic dbg; logic [12:0] achk; logic integrity;  } , struct packed{ obi_inst_resp_t bus_resp; mpu_status_e mpu_status;  } , struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/state_q/MPU_IDLE/MPU_WR_ERR_WAIT" entityType="transition" excTime="1696161872" name="exclude" packageName="worklib" reviewer="unknown" user="1" vscope="default"></rule>
    <rule ccType="type" comment="0" domain="icc" entityName="&quot;cv32e40s_mpu#(struct packed{ logic [31:0] addr; logic [1:0] memtype; logic [2:0] prot; logic dbg; logic [12:0] achk; logic integrity;  } , struct packed{ obi_inst_resp_t bus_resp; mpu_status_e mpu_status;  } , struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/state_q/MPU_RE_ERR_WAIT/MPU_WR_ERR_RESP" entityType="transition" excTime="1696161882" name="exclude" packageName="worklib" reviewer="unknown" user="1" vscope="default"></rule>
    <rule ccType="type" comment="0" domain="icc" entityName="&quot;cv32e40s_mpu#(struct packed{ logic [31:0] addr; logic [1:0] memtype; logic [2:0] prot; logic dbg; logic [12:0] achk; logic integrity;  } , struct packed{ obi_inst_resp_t bus_resp; mpu_status_e mpu_status;  } , struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/state_q/MPU_WR_ERR_WAIT/MPU_RE_ERR_RESP" entityType="transition" excTime="1696161892" name="exclude" packageName="worklib" reviewer="unknown" user="1" vscope="default"></rule>
    <rule ccType="type" comment="0" domain="icc" entityName="&quot;cv32e40s_mpu#(struct packed{ logic [31:0] addr; logic [1:0] memtype; logic [2:0] prot; logic dbg; logic [12:0] achk; logic integrity;  } , struct packed{ obi_inst_resp_t bus_resp; mpu_status_e mpu_status;  } , struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/state_q/MPU_WR_ERR_WAIT/MPU_WR_ERR_RESP" entityType="transition" excTime="1696161903" name="exclude" packageName="worklib" reviewer="unknown" user="1" vscope="default"></rule>
    <rule ccType="type" comment="0" domain="icc" entityName="&quot;cv32e40s_mpu#(struct packed{ logic [31:0] addr; logic [1:0] memtype; logic [2:0] prot; logic dbg; logic [12:0] achk; logic integrity;  } , struct packed{ obi_inst_resp_t bus_resp; mpu_status_e mpu_status;  } , struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/state_q/MPU_WR_ERR_WAIT/MPU_WR_ERR_WAIT" entityType="transition" excTime="1696161912" name="exclude" packageName="worklib" reviewer="unknown" user="1" vscope="default"></rule>
    <rule ccType="type" comment="0" domain="icc" entityName="&quot;cv32e40s_mpu#(struct packed{ logic [31:0] addr; logic [1:0] memtype; logic [2:0] prot; logic dbg; logic [12:0] achk; logic integrity;  } , struct packed{ obi_inst_resp_t bus_resp; mpu_status_e mpu_status;  } , struct packed{ logic [31:0] rdata; logic err; logic [4:0] rchk; logic integrity_err; logic integrity;  } )&quot;/state_q/MPU_WR_ERR_RESP/MPU_IDLE" entityType="transition" excTime="1696161922" name="exclude" packageName="worklib" reviewer="unknown" user="1" vscope="default"></rule>
  </rules>
  <cache-map>
    <cache-entry key="0" value="Unreachable state: no instr obi packets do writes, hence no mpu write errors.
Verify: instr_we_o does not exist (ARCH SPEC), 
and is therefore tied off to 0 (OBI SPEC).
"></cache-entry>
    <cache-entry key="1" value="krdosvik"></cache-entry>
  </cache-map>
</refinement-file-root>